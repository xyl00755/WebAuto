<<<<<<< HEAD
<project name="Sample" basedir="." default="main" xmlns:ivy="antlib:org.apache.ivy.ant">

    <property name="src.dir"     value="src"/>
    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>
    <property name="lib.dir"     value="External Libraries"/>
    <property name="main-class"  value="Redwood"/>
    <property name="build.compiler"  value="modern"/>
    <property name="ivy.lib.dir" value="${build.dir}/jar"/>

    <path id="class.path">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="../../../../launcher">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${ivy.lib.dir}" erroronmissingdir="false">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="class.path">
    </taskdef>

    <target name="resolve" description="--> retrieve dependencies with ivy">
        <ivy:retrieve/>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <groovyc srcdir="${src.dir}" destdir="${classes.dir}">
            <javac debug="on" classpathref="class.path"/>
        </groovyc>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
        </jar>
    </target>

    <target name="run" depends="jar">
        <java jar="${jar.dir}/${ant.project.name}.jar" fork="true"/>
    </target>

    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,run"/>

</project>
=======
<?xml version="1.0" encoding="UTF-8" ?>
<project name="selenium" default="run_tests" basedir=".">
	<property name="src" value="src"/>
	<property name="dest" value="classes"/>

	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="test-suites.dir" value="${basedir}/test-suites"/>
	
	<path id="compile.path">
		<fileset dir="${lib.dir}/">
			<include name="*.jar"/>
		</fileset> 
		<pathelement location="${src}"/>
		<pathelement location="${dest}"/>
	</path>
	<target name="init">
		<mkdir dir="${dest}"/>
	</target>
	<target name="compile" depends="init">
		<javac srcdir="${src}" destdir="${dest}" classpathref="compile.path" includeantruntime="false" encoding="UTF-8"/>
	</target>
	<!--run testng ant task-->
	<taskdef resource="testngtasks" classpath="${lib.dir}/testng.jar"/>
	
	<target name="run_tests" depends="compile"> 
		<testng classpathref="compile.path" failureproperty="test.failed"> 
			<jvmarg value="-Dfile.encoding=UTF-8"/>
			<!--xml test suite file -->
			<xmlfileset dir="${test-suites.dir}">
				<include name="TestNG.xml"/>
			</xmlfileset> 
		</testng> 
		<antcall target="sendReport"/> 
		<fail message="ERROR: test failed!!!!!" if="test.failed"/>
	</target> 
	<target name="sendReport"> 
		<delete dir="${dest}"/> 
		<antcall target="transform"/>
	</target> 
	<target name="transform">
		<xslt in="${basedir}/test-output/testng-results.xml" style="${basedir}/test-output/testng-results.xsl" out="${basedir}/test-output/index1.html" classpathref="compile.path" processor="SaxonLiaison">
			<!-- you need to specify the directory here again -->
			<param name="testNgXslt.outputDir" expression="${basedir}/test-output/"/>
			<param name="testNgXslt.showRuntimeTotals" expression="true"/>
			<!--<classpath refid="compile.path" />-->
		</xslt>
	</target>
</project>
>>>>>>> d9ecf97aa5954bea615f7f393c6dbe0ce6b375c9
